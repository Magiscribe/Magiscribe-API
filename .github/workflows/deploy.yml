name: Deploy

on:
  push:
    branches:
      - main
  schedule:
    # Everday at 9:00am EST
    - cron:  '0 13 * * *'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  pull-requests: write

# Allow one concurrent deployment
concurrency:
  group: infrastructure-${{ github.ref == 'refs/heads/main' && 'prod' || 'dev'}}
  cancel-in-progress: true

jobs:
  build-images:
    name: Build and Push Images
    strategy:
      matrix:
        include:
          - name: Executor
            path: './app/lambdas/python-executor'
            repository: 'python-executor'
          - name: API
            path: './app'
            repository: 'graphql-api'
    uses: ./.github/workflows/build-container.yml
    with:
      path: ${{ matrix.path }}
      repository: ${{ matrix.repository }}
      role_to_assume: ${{ github.ref == 'refs/heads/main' && 'arn:aws:iam::211125562192:role/GitHubAssumeRole' || 'arn:aws:iam::891377366124:role/GitHubAssumeRole' }}
      region: 'us-east-1'

  terraform:
    name: "Terraform CDK Deploy"
    runs-on: ubuntu-latest
    needs: [build-images]
    defaults:
      run:
        working-directory: ./infrastructure
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@main

      - uses: pnpm/action-setup@v4
        with:
          version: 9

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'          
          cache-dependency-path: ./infrastructure/pnpm-lock.yaml

      - name: Assume AWS Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ github.ref == 'refs/heads/main' && 'arn:aws:iam::211125562192:role/GitHubAssumeRole' || 'arn:aws:iam::891377366124:role/GitHubAssumeRole' }}
          aws-region: us-east-1

      - name: Install dependencies
        run: pnpm install

      - name: Generate module and provider bindings
        run: pnpm run get

      - name: Run Terraform CDK
        uses: hashicorp/terraform-cdk-action@v5
        with:
          mode: auto-approve-apply
          stackName: network data api client-app client-dashboard
          workingDirectory: ./infrastructure
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          commentOnPr: false
        env:
          NODE_ENV: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev'}}